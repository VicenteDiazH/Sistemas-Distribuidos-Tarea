services:
  postgres:
    image: postgres:15
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: yahoo_dataset
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d yahoo_dataset"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres

  csv_loader:
    build:
      context: ./loader
    restart: "no"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - PGHOST=postgres
      - PGPORT=5432
      - PGUSER=postgres
      - PGPASSWORD=postgres
      - PGDATABASE=yahoo_dataset
      - CSV_PATH=/data/test.csv
      - TABLE_NAME=yahoo_answers
    volumes:
      - ./Dataset-Documentation:/data:ro

  # Ollama con límites de recursos para evitar congelamiento
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_NUM_PARALLEL=1          # Solo 1 request a la vez
      - OLLAMA_MAX_LOADED_MODELS=1      # Solo 1 modelo en memoria
      - OLLAMA_KEEP_ALIVE=5m            # Descargar modelo después de 5 min inactivo
    deploy:
      resources:
        limits:
          cpus: '2.0'      # Máximo 2 cores
          memory: 4G       # Máximo 4GB RAM
        reservations:
          memory: 2G       # Mínimo 2GB RAM
    healthcheck:
      test: ["CMD-SHELL", "ollama list || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  llm:
    build: ./llm
    environment:
      - OLLAMA_URL=http://ollama:11434
      - OLLAMA_MODEL=llama3.2:1b
      - REQUEST_TIMEOUT=60
    ports:
      - "5000:5000"
    depends_on:
      ollama:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:5000/health || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 5

  dataset:
    build: .
    ports:
      - "3000:3000"
    volumes:
      - ./:/app
      - node_modules:/app/node_modules
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=yahoo_dataset
    depends_on:
      - postgres
      - llm

  traffic-poisson:
    build: ./traffic-generator
    restart: "no"
    profiles: ["poisson"]
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=yahoo_dataset
      - LLM_SERVICE_URL=http://llm:5000/ask
      - DISTRIBUTION_TYPE=poisson
      - LAMBDA=5
      - TOTAL_QUERIES=100
    depends_on:
      postgres:
        condition: service_healthy
      llm:
        condition: service_healthy

  traffic-uniform:
    build: ./traffic-generator
    restart: "no"
    profiles: ["uniform"]
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=yahoo_dataset
      - LLM_SERVICE_URL=http://llm:5000/ask
      - DISTRIBUTION_TYPE=uniform
      - MIN_INTERVAL=100
      - MAX_INTERVAL=2000
      - TOTAL_QUERIES=100
    depends_on:
      postgres:
        condition: service_healthy
      llm:
        condition: service_healthy

volumes:
  postgres_data:
  node_modules:
  pgadmin_data:
  ollama_data: